logsBucket: "gs://portfolio-jakub-rejch-cloudbuild-logs"

steps:
  # Instalacja zależności i budowanie aplikacji React
  - name: 'gcr.io/cloud-builders/npm'
    args: ['install']
    id: "Install dependencies"

  - name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']
    id: "Build React app"

  # Budowanie obrazu Dockera
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/portfolio-jakub-rejch/react-app/react-app-image:$COMMIT_SHA'
      - '.'
    id: "Build Docker image"

  # Push obrazu do Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/portfolio-jakub-rejch/react-app/react-app-image:$COMMIT_SHA'
    id: "Push Docker image"

  # Wdrożenie na Cloud Run (green deployment)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        if gcloud run services describe react-app-green --platform=managed --region=us-central1; then
          echo "Service exists, deploying with --no-traffic"
          gcloud run deploy react-app-green \
            --image=us-central1-docker.pkg.dev/portfolio-jakub-rejch/react-app/react-app-image:$COMMIT_SHA \
            --platform=managed \
            --region=us-central1 \
            --allow-unauthenticated \
            --no-traffic
        else
          echo "Service does not exist, deploying without --no-traffic"
          gcloud run deploy react-app-green \
            --image=us-central1-docker.pkg.dev/portfolio-jakub-rejch/react-app/react-app-image:$COMMIT_SHA \
            --platform=managed \
            --region=us-central1 \
            --allow-unauthenticated
        fi
    id: "Deploy to Cloud Run"

  # Sprawdzenie, czy aplikacja działa
  - name: 'curlimages/curl'
    args:
      - '-f'
      - 'https://react-app-green.us-central1.a.run.app/index.html'  # Poprawny URL
    timeout: '10s'
    allowFailure: true
    id: "Test deployed app"

  # Jeśli testy się powiodą, przełącz ruch na nową wersję
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'services'
      - 'update-traffic'
      - 'react-app'
      - '--region=us-central1'
      - '--to-latest'
    id: "Switch traffic to new version"

images:
  - 'us-central1-docker.pkg.dev/portfolio-jakub-rejch/react-app/react-app-image:$COMMIT_SHA'
