# Określenie miejsca przechowywania logów
logsBucket: "gs://portfolio-jakub-rejch-cloudbuild-logs"

steps:
  # Pobranie (wymuszenie) najnowszego kodu (jeśli Cloud Build nie robi tego automatycznie)
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        git config --global credential.helper gcloud.sh 
        git fetch --all
        git reset --hard origin/master
    id: "Force fetch latest code"

  # Instalacja zależności i budowanie aplikacji React
  - name: 'gcr.io/cloud-builders/npm'
    args: ['install']
    id: "Install dependencies"

  - name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']
    id: "Build React app"

  # Budowanie obrazu Dockera
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--no-cache'
      - '-t'
      - 'us-central1-docker.pkg.dev/portfolio-jakub-rejch/react-app/react-app-image:$COMMIT_SHA'
      - '.'
    id: "Build Docker image"

  # Push obrazu do Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/portfolio-jakub-rejch/react-app/react-app-image:$COMMIT_SHA'
    id: "Push Docker image"

  # Wdrożenie na Cloud Run (bez green deployment)
  # Nowa wersja aplikacji od razu przejmuje cały ruch
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'react-app'
      - '--image=us-central1-docker.pkg.dev/portfolio-jakub-rejch/react-app/react-app-image:$COMMIT_SHA'
      - '--platform=managed'
      - '--region=us-central1'
      - '--allow-unauthenticated'
    id: "Deploy to Cloud Run"

  # Sprawdzenie, czy aplikacja działa i czy jest dostępna po wdrożeniu
  - name: 'curlimages/curl'
    args:
      - '-f'
      - 'https://react-app.us-central1.a.run.app/index.html'
    timeout: '10s'
    allowFailure: true
    id: "Test deployed app"

images:
  - 'us-central1-docker.pkg.dev/portfolio-jakub-rejch/react-app/react-app-image:$COMMIT_SHA'
